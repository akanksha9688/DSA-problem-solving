class Solution:
    def minChar(self, s):
        #Write your code here
        def compute_lps_array(string):
            n = len(string)
            lps = [0] * n
            length = 0  # length of the previous longest prefix suffix
            i = 1
            while i < n:
                if string[i] == string[length]:
                    length += 1
                    lps[i] = length
                    i += 1
                else:
                    if length != 0:
                        length = lps[length - 1]
                    else:
                        lps[i] = 0
                        i += 1
            return lps
        # Create the concatenated string
        rev_s = s[::-1]
        concatenated_string = s + "$" + rev_s
        
        # Compute the LPS array
        lps = compute_lps_array(concatenated_string)
        
        # Minimum characters to add = length of original string - last value in LPS array
        return len(s) - lps[-1]
